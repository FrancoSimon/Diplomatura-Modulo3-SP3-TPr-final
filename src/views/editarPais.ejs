   <h1 class="text-4xl text-white font-bold mb-4">Editar País</h1>
  
  <form id="formEditar" action="/api/paises/<%= paisAEditar._id %>/editar?_method=PUT" method="POST" class="bg-gray-50 bg-opacity-80 text-gray-700 p-6 rounded shadow-md max-w-xl w-full">
    <input type="hidden" name="_method" value="PUT">

    <!-- Campo nombre -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Nombre del país</label>
      <input name="nombre" value="<%= paisAEditar.nombre %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-nombre"></p>
    </div>

    <!-- Campo nombreOficial -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Nombre oficial</label>
      <input name="nombreOficial" value="<%= paisAEditar.nombreOficial %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-nombreOficial"></p>
    </div>

    <!-- Campo capital -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Capital (separadas por coma)</label>
      <input name="capital" value="<%= paisAEditar.capital.join(', ') %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-capital"></p>
    </div>

    <!-- Campo fronteras -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Códigos de países fronterizos (separados por coma, 3 letras mayúsculas)</label>
      <input name="fronteras" value="<%= paisAEditar.fronteras.join(', ') %>" class="text-black w-full mb-1 p-2 border rounded uppercase">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-fronteras"></p>
    </div>

    <!-- Campo area -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Área (km²)</label>
      <input type="number" name="area" value="<%= paisAEditar.area %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-area"></p>
    </div>

    <!-- Campo poblacion -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Población</label>
      <input type="number" name="poblacion" value="<%= paisAEditar.poblacion %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-poblacion"></p>
    </div>

    <!-- Campo creador no modificar 
    <div class="mb-4">
      <label class="block mb-2 font-bold">Creador</label>
      <input name="creador" value="<%= paisAEditar.creador %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-creador"></p>
    </div>
   -->
    <!-- Botones -->
    <div class="flex space-x-4">
      <button type="submit" class="flex-1 bg-blue-700 text-white px-6 py-2 rounded-xl font-semibold hover:bg-blue-800 text-center">
        Editar País
      </button>
      <a href="/api/paises" class="flex-1 bg-white text-black border border-black px-6 py-2 rounded-xl font-semibold hover:bg-gray-100 text-center">
        Cancelar
      </a>
    </div>
  </form>


  <!-- Importar SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <!-- Validación + Confirmación -->
  <script>
    document.getElementById('formEditar').addEventListener('submit', function (e) {
      e.preventDefault(); // Previene envío inmediato
      const campos = ['nombre', 'nombreOficial', 'capital', 'fronteras', 'area', 'poblacion'];
      let hayErrores = false;

      campos.forEach(campo => {
        const input = this.elements[campo];
        const valor = input.value.trim();
        const errorMsg = document.getElementById('error-' + campo);

        input.classList.remove('border-red-500');
        errorMsg.classList.add('hidden');
        errorMsg.textContent = '';

        if (!valor) {
          input.classList.add('border-red-500');
          errorMsg.textContent = "Este campo es obligatorio.";
          errorMsg.classList.remove('hidden');
          hayErrores = true;
        } else {
          switch (campo) {
            case 'nombre':
            case 'nombreOficial':
              if (valor.length < 3 || valor.length > 60) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe tener entre 3 y 60 caracteres.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
            case 'capital':
              const capitales = valor.split(',').map(c => c.trim()).filter(c => c.length > 0);
              if (capitales.length === 0) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe ingresar al menos una capital, separadas por coma.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
            case 'fronteras':
              const fronteras = valor.split(',').map(f => f.trim().toUpperCase()).filter(f => f.length > 0);
              if (fronteras.length === 0) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe ingresar al menos un código de país fronterizo.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              } else if (!fronteras.every(f => /^[A-Z]{3}$/.test(f))) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Cada código debe tener exactamente 3 letras mayúsculas.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
            case 'area':
            case 'poblacion':
              if (!/^\d+$/.test(valor) || parseInt(valor) <= 0) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe ser un número entero positivo mayor a 0.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
          }
        }
      });

      if (hayErrores) return;

      Swal.fire({
        title: '¿Editar país?',
        text: '¿Desea editar este país en la base de datos?',
        icon: 'question',
        background: '#f9fafb',
        color: '#1f2937',
        iconColor: '#374151',
        showCancelButton: true,
        confirmButtonText: 'Sí, editar',
        cancelButtonText: 'Cancelar',
        confirmButtonColor: '#374151',
        cancelButtonColor: '#ffffff',
        customClass: {
          popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
          title: 'text-base md:text-xl font-bold',
          htmlContainer: 'text-sm md:text-base',
          confirmButton: 'w-full md:w-auto text-white bg-blue-500 hover:bg-blue-800 px-6 py-2 rounded-xl mb-2 md:mb-0 md:mr-2',
          cancelButton: 'w-full md:w-auto text-black border border-black hover:bg-gray-200 px-6 py-2 rounded-xl mt-2 md:mt-0'
        },
        buttonsStyling: false
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'País Editado',
            text: 'El país ha sido editado exitosamente.',
            icon: 'success',
            background: '#f9fafb',
            color: '#1f2937',
            iconColor: '#10b981',
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true,
            customClass: {
              popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
              title: 'text-base md:text-xl font-bold',
              htmlContainer: 'text-sm md:text-base',
            }
          }).then(() => {
            e.target.submit(); // Enviar el formulario real
          });
        }
      });
    });
  </script>
