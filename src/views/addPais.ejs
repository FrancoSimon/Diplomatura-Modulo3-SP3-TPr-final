 <section class="w-full max-w-2xl mx-auto bg-white bg-opacity-90 p-8 rounded-xl shadow-lg mt-10 mb-10">
  <h1 class="text-3xl font-bold text-center mb-6">Agregar nuevo país</h1>

  <form id="formCargar" action="/api/paises/agregar" method="POST" class="space-y-4">
    <input type="hidden" name="_method" value="POST">

    <!-- Campo nombre -->
    <div>
      <label class="block mb-1 font-bold">Nombre del país</label>
      <input name="nombre" class="w-full p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-nombre"></p>
    </div>

  <!-- Campo nombreOficial -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Nombre oficial</label>
    <input name="nombreOficial" class="w-full mb-1 p-2 border rounded">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-nombreOficial"></p>
  </div>

  <!-- Campo capital -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Capital (separadas por coma)</label>
    <input name="capital" class="w-full mb-1 p-2 border rounded">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-capital"></p>
  </div>

  <!-- Campo bandera -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">URL de la bandera</label>
    <input name="bandera" class="w-full mb-1 p-2 border rounded">
  </div>

  <!-- Campo continente -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Continente (separados por coma)</label>
    <input name="continente" class="w-full mb-1 p-2 border rounded">
  </div>

  <!-- Campo fronteras -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Códigos de países fronterizos (separados por coma, 3 letras mayúsculas)</label>
    <input name="fronteras" class="w-full mb-1 p-2 border rounded uppercase" placeholder="Ej: ARG, BRA, URY">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-fronteras"></p>
  </div>

  <!-- Campo área -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Área (km²)</label>
    <input type="number" name="area" class="w-full mb-1 p-2 border rounded">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-area"></p>
  </div>

  <!-- Campo población -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Población</label>
    <input type="number" name="poblacion" class="w-full mb-1 p-2 border rounded">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-poblacion"></p>
  </div>

  <!-- Campo idiomas -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Idiomas (separados por coma)</label>
    <input name="idiomas" class="w-full mb-1 p-2 border rounded">
  </div>

  <!-- Campo gini -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Coeficiente Gini (año:valor separados por coma)</label>
    <input name="gini" class="w-full mb-1 p-2 border rounded" placeholder="Ej: 2019:42.9, 2018:41.5">
  </div>

  <!-- Campo zonaHoraria -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Zonas horarias (separadas por coma)</label>
    <input name="zonaHoraria" class="w-full mb-1 p-2 border rounded" placeholder="Ej: UTC-03:00, UTC-02:00">
  </div>

  <!-- Campo creador -->
  <div class="mb-4">
    <label class="block mb-2 font-bold">Creador</label>
    <input name="creador" class="w-full mb-1 p-2 border rounded">
    <p class="text-red-500 text-sm mt-1 hidden" id="error-creador"></p>
  </div>

  <!-- Botones -->
    <div class="flex space-x-4 pt-4">
      <button type="submit" class="flex-1 bg-blue-700 text-white px-6 py-2 rounded-xl font-semibold hover:bg-blue-800">
        Crear País
      </button>
      <a href="/api/paises" class="flex-1 bg-white text-black border border-black px-6 py-2 rounded-xl font-semibold hover:bg-gray-100 text-center">
        Cancelar
      </a>
    </div>
  </form>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--tu validación con SweetAlert2 acá-->
<script>
  document.getElementById('formCargar').addEventListener('submit', function (e) {
      e.preventDefault();
      const campos = ['nombre', 'nombreOficial', 'capital', 'fronteras', 'area', 'poblacion', 'creador'];
      let hayErrores = false;

      campos.forEach(campo => {
        const input = this.elements[campo];
        const valor = input.value.trim();
        const errorMsg = document.getElementById('error-' + campo);

        input.classList.remove('border-red-500');
        if (errorMsg) {
          errorMsg.classList.add('hidden');
          errorMsg.textContent = '';
        }

        if (!valor) {
          input.classList.add('border-red-500');
          if (errorMsg) {
            errorMsg.textContent = "Este campo es obligatorio.";
            errorMsg.classList.remove('hidden');
          }
          hayErrores = true;
        } else {
          switch (campo) {
            case 'nombre':
            case 'nombreOficial':
              if (valor.length < 3 || valor.length > 60) {
                input.classList.add('border-red-500');
                if (errorMsg) {
                  errorMsg.textContent = "Debe tener entre 3 y 60 caracteres.";
                  errorMsg.classList.remove('hidden');
                }
                hayErrores = true;
              }
              break;
            case 'capital':
              const capitales = valor.split(',').map(c => c.trim()).filter(c => c.length > 0);
              if (capitales.length === 0) {
                input.classList.add('border-red-500');
                if (errorMsg) {
                  errorMsg.textContent = "Debe ingresar al menos una capital, separadas por coma.";
                  errorMsg.classList.remove('hidden');
                }
                hayErrores = true;
              }
              break;
            case 'fronteras':
              const fronteras = valor.split(',').map(f => f.trim().toUpperCase()).filter(f => f.length > 0);
              if (fronteras.length === 0) {
                input.classList.add('border-red-500');
                if (errorMsg) {
                  errorMsg.textContent = "Debe ingresar al menos un código de país fronterizo.";
                  errorMsg.classList.remove('hidden');
                }
                hayErrores = true;
              } else if (!fronteras.every(f => /^[A-Z]{3}$/.test(f))) {
                input.classList.add('border-red-500');
                if (errorMsg) {
                  errorMsg.textContent = "Cada código debe tener exactamente 3 letras mayúsculas.";
                  errorMsg.classList.remove('hidden');
                }
                hayErrores = true;
              }
              break;
            case 'area':
            case 'poblacion':
              if (!/^\d+$/.test(valor) || parseInt(valor) <= 0) {
                input.classList.add('border-red-500');
                if (errorMsg) {
                  errorMsg.textContent = "Debe ser un número entero positivo mayor a 0.";
                  errorMsg.classList.remove('hidden');
                }
                hayErrores = true;
              }
              break;
          }
        }
      });

      if (hayErrores) return;

      Swal.fire({
        title: '¿Crear país?',
        text: '¿Deseas guardar este nuevo país en la base de datos?',
        icon: 'question',
        background: '#f9fafb',
        color: '#1f2937',
        iconColor: '#374151',
        showCancelButton: true,
        confirmButtonText: 'Sí, crear',
        cancelButtonText: 'Cancelar',
        confirmButtonColor: '#374151',
        cancelButtonColor: '#ffffff',
        customClass: {
          popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
          title: 'text-base md:text-xl font-bold',
          htmlContainer: 'text-sm md:text-base',
          confirmButton: 'w-full md:w-auto text-white bg-blue-500 hover:bg-blue-800 px-6 py-2 rounded-xl mb-2 md:mb-0 md:mr-2',
          cancelButton: 'w-full md:w-auto text-black border border-black hover:bg-gray-200 px-6 py-2 rounded-xl mt-2 md:mt-0'
        },
        buttonsStyling: false
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'País creado',
            text: 'El país ha sido guardado exitosamente.',
            icon: 'success',
            background: '#f9fafb',
            color: '#1f2937',
            iconColor: '#10b981',
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true,
            customClass: {
              popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
              title: 'text-base md:text-xl font-bold',
              htmlContainer: 'text-sm md:text-base',
            }
          }).then(() => {
            e.target.submit(); // Enviar el formulario real
          });
        }
      });
    });
</script>